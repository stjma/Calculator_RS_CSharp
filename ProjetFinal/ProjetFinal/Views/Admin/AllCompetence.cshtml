@model IEnumerable<ProjetFinal.Models.competence>
@using ProjetFinal.Models;
@{
    ViewBag.Title = "AllCompetence";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_AdminOption")

<script src="~/Scripts/jquery.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>


<h2>Compétence</h2>

<div id="PartialCompetence">
    <p>
        @Ajax.ActionLink("Ajouter Competence", "AddCompetence", "Admin", new AjaxOptions() { UpdateTargetId = "PartialCompetence", InsertionMode = InsertionMode.Replace })
    </p>


    <table class="table">
        <tr>
            
            <th>
                @Html.DisplayNameFor(model => model.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.xp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.skill.nameSkill)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.xp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.skill.nameSkill)
                </td>
                <td>
                    <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#@item.id">Modifier</button>
                </td>
            </tr>

            <tr id=@item.id class="collapse">
                <td  colspan="4">
                    @using (Html.BeginForm("EditCompentence", "Admin", FormMethod.Post))
                     {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            @Html.Hidden(name: "id", value: @item.id)

                        
                            <div class="form-group">
                                @Html.LabelFor(model => item.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => item.name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => item.xp, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => item.xp, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.xp, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            @{
                                //Remplir le dropdownlist
                                List<SelectListItem> listName = new List<SelectListItem>();

                                projetFinalEntities1 projetFinalEntities = new projetFinalEntities1();


                                foreach (skill xpTable in projetFinalEntities.skills.ToList())
                                {
                                    if (xpTable.nameSkill != item.skill.nameSkill)
                                    {
                                        listName.Add(new SelectListItem() { Text = xpTable.nameSkill, Value = xpTable.nameSkill });
                                    }
                                }

                            }

                            <div class="form-group">
                                @Html.LabelFor(model => item.skill.nameSkill, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("nameSkill", listName, item.skill.nameSkill)
                                </div>
                            </div>
                            @Html.Hidden(name: "else", value: @item.skill.nameSkill)

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button class="btn btn-default">Modifier</button>
                                </div>
                            </div>
                        </div>
                     }
                </td>
            </tr>
         }
    </table>
</div>