@model IEnumerable<ProjetFinal.Models.skill>
@using ProjetFinal.Models;
@{
    ViewBag.Title = "AllSkill";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_AdminOption")

<script src="~/Scripts/jquery.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<h2>Attribut</h2>

<div id="PartialSkill">
    <p>
        @Ajax.ActionLink("Ajouter skill", "AddSkill", "Admin", new AjaxOptions() { UpdateTargetId = "PartialSkill", InsertionMode = InsertionMode.Replace })
    </p>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.nameSkill)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.xpTable.name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.nameSkill)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.xpTable.name)
                </td>
                <td>
                    <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#@item.nameSkill@item.id">Modifier</button>
                    @Html.ActionLink("Details", "AllCompetence", new { idSkill = item.id }, new { @class = "btn btn-info" })                    
                </td>
            </tr>

            <tr id=@item.nameSkill@item.id class="collapse">
                <td  colspan="3">
                    @using (Html.BeginForm("EditSkill", "Admin", FormMethod.Post))
                {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            @Html.Hidden(name: "id", value: @item.id)


                            <div class="form-group">
                                @Html.LabelFor(model => item.nameSkill, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => item.nameSkill, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.nameSkill, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            @{
                                //Remplir le dropdownlist
                                List<SelectListItem> listName = new List<SelectListItem>();

                                projetFinalEntities1 projetFinalEntities = new projetFinalEntities1();


                                foreach (xpTable xpTable in projetFinalEntities.xpTables.ToList())
                                {
                                    if (xpTable.name != item.xpTable.name)
                                    {
                                        listName.Add(new SelectListItem() { Text = xpTable.name, Value = xpTable.name });
                                    }
                                }

                            }

                            <div class="form-group">
                                @Html.LabelFor(model => item.xpTable.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("name", listName, item.xpTable.name)
                                </div>
                            </div>
                            @Html.Hidden(name: "else", value: @item.xpTable.name)

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button class="btn btn-default">Modifier</button>
                                </div>
                            </div>
                        </div>
                     }
                </td>
            </tr>
         }

    </table>
</div>